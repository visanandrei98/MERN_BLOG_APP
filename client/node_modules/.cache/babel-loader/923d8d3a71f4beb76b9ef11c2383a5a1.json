{"ast":null,"code":"import axios from 'axios';\nconst domain = 'http://localhost:4000/api/articles';\nconst http = (url, _ref) => {\n  let {\n    method = 'get',\n    data = undefined\n  } = _ref;\n  return axios({\n    url: domain,\n    method: method,\n    data\n  });\n};\n/* var deleteDatas = (\r\n  url,\r\n  {\r\n    method = 'delete',\r\n    data = undefined,\r\n  },\r\n) => {\r\n  return axios({\r\n    url: domain,\r\n    method: method,\r\n    data,\r\n  });\r\n}; */\n\nconst get = function (url) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http(url, {\n    ...opts\n  });\n};\nconst post = function (url) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http(url, {\n    method: 'post',\n    ...opts\n  });\n};\nconst put = function (url) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http(url, {\n    method: 'put',\n    ...opts\n  });\n};\nconst deleteData = function (url) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return http(url, {\n    method: 'delete',\n    ...opts\n  });\n};\nconst methods = {\n  get,\n  post,\n  put,\n  delete: deleteData\n};\nexport default methods;","map":{"version":3,"names":["axios","domain","http","url","method","data","undefined","get","opts","post","put","deleteData","methods","delete"],"sources":["C:/Users/Yoga/Desktop/main/projects/mern-blog-app/mern-blog-app/client/src/lib/http.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst domain ='http://localhost:4000/api/articles';\r\n\r\nconst http = (\r\n  url,\r\n  {\r\n    method = 'get',\r\n    data = undefined,\r\n  },\r\n) => {\r\n  return axios({\r\n    url: domain,\r\n    method: method,\r\n    data,\r\n  });\r\n};\r\n/* var deleteDatas = (\r\n  url,\r\n  {\r\n    method = 'delete',\r\n    data = undefined,\r\n  },\r\n) => {\r\n  return axios({\r\n    url: domain,\r\n    method: method,\r\n    data,\r\n  });\r\n}; */\r\n\r\nconst get = (url, opts = {}) => http(url, { ...opts });\r\nconst post = (url, opts = {}) => http(url, { method: 'post', ...opts });\r\nconst put = (url, opts = {}) => http(url, { method: 'put', ...opts });\r\nconst deleteData = (url, opts = {}) => http(url, { method: 'delete', ...opts });\r\n\r\nconst methods = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: deleteData,\r\n};\r\n\r\nexport default methods;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAE,oCAAoC;AAElD,MAAMC,IAAI,GAAG,CACXC,GAAG,WAKA;EAAA,IAJH;IACEC,MAAM,GAAG,KAAK;IACdC,IAAI,GAAGC;EACT,CAAC;EAED,OAAON,KAAK,CAAC;IACXG,GAAG,EAAEF,MAAM;IACXG,MAAM,EAAEA,MAAM;IACdC;EACF,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,GAAG,GAAG,UAACJ,GAAG;EAAA,IAAEK,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAKN,IAAI,CAACC,GAAG,EAAE;IAAE,GAAGK;EAAK,CAAC,CAAC;AAAA;AACtD,MAAMC,IAAI,GAAG,UAACN,GAAG;EAAA,IAAEK,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAKN,IAAI,CAACC,GAAG,EAAE;IAAEC,MAAM,EAAE,MAAM;IAAE,GAAGI;EAAK,CAAC,CAAC;AAAA;AACvE,MAAME,GAAG,GAAG,UAACP,GAAG;EAAA,IAAEK,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAKN,IAAI,CAACC,GAAG,EAAE;IAAEC,MAAM,EAAE,KAAK;IAAE,GAAGI;EAAK,CAAC,CAAC;AAAA;AACrE,MAAMG,UAAU,GAAG,UAACR,GAAG;EAAA,IAAEK,IAAI,uEAAG,CAAC,CAAC;EAAA,OAAKN,IAAI,CAACC,GAAG,EAAE;IAAEC,MAAM,EAAE,QAAQ;IAAE,GAAGI;EAAK,CAAC,CAAC;AAAA;AAE/E,MAAMI,OAAO,GAAG;EACdL,GAAG;EACHE,IAAI;EACJC,GAAG;EACHG,MAAM,EAAEF;AACV,CAAC;AAED,eAAeC,OAAO"},"metadata":{},"sourceType":"module"}