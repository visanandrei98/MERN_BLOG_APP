{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoga\\\\Desktop\\\\main\\\\projects\\\\mern-blog-app\\\\mern-blog-app\\\\client\\\\src\\\\pages\\\\tokens.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport http from '../lib/http';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tokens() {\n  _s();\n  const [token, setToken] = useState({});\n  /* useEffect(() => {\r\n      async function fetchData() {\r\n        const { data } = await http.get(`/token`);\r\n        setToken(data.token);  \r\n      }\r\n      fetchData();\r\n      console.log(token)\r\n    }, []); */\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        data\n      } = await http.get('/token');\n      setToken(data.data.token);\n    }\n    fetchData();\n  }, []);\n  console.log(token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Tokens, \"GOIS3TTNcNN9UiMykOjC8bLPzH0=\");\n_c = Tokens;\nexport default Tokens;\nvar _c;\n$RefreshReg$(_c, \"Tokens\");","map":{"version":3,"names":["useEffect","useState","React","http","ListGroup","Tokens","token","setToken","fetchData","data","get","console","log"],"sources":["C:/Users/Yoga/Desktop/main/projects/mern-blog-app/mern-blog-app/client/src/pages/tokens.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport http from '../lib/http';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nfunction Tokens(){\r\n    const [token, setToken] = useState({});\r\n    /* useEffect(() => {\r\n        async function fetchData() {\r\n          const { data } = await http.get(`/token`);\r\n          setToken(data.token);  \r\n        }\r\n        fetchData();\r\n        console.log(token)\r\n      }, []); */\r\n      useEffect(() => {\r\n        async function fetchData() {\r\n         const { data } = await http.get('/token')\r\n         setToken(data.data.token);\r\n       \r\n       }\r\n       fetchData();\r\n     }, []);\r\n     console.log(token)\r\n    return(\r\n        <div>\r\n            {/* {\r\n            token.map((tokens) => {\r\n              return (\r\n                <ListGroup.Item key={tokens._id}> \r\n                  <div>{tokens.token}</div>\r\n                </ListGroup.Item>\r\n              );\r\n            })\r\n          } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tokens;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,SAAS,MAAM,2BAA2B;AAAC;AAClD,SAASC,MAAM,GAAE;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACMD,SAAS,CAAC,MAAM;IACd,eAAeQ,SAAS,GAAG;MAC1B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMN,IAAI,CAACO,GAAG,CAAC,QAAQ,CAAC;MACzCH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACH,KAAK,CAAC;IAE3B;IACAE,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EACNG,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACnB,oBACI;IAAA;IAAA;IAAA;EAAA,QAUM;AAEd;AAAC,GAhCQD,MAAM;AAAA,KAANA,MAAM;AAkCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}